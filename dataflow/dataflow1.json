{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_ABLB_Employees",
						"type": "DatasetReference"
					},
					"name": "Employees"
				},
				{
					"dataset": {
						"referenceName": "DS_ASQL_myazuresqldb_dimemp",
						"type": "DatasetReference"
					},
					"name": "dimempmaxkey"
				},
				{
					"dataset": {
						"referenceName": "DS_ASQL_myazuresqldb_dimemp",
						"type": "DatasetReference"
					},
					"name": "dimemp"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_ASQL_myazuresqldb_dimemp",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DS_ASQL_myazuresqldb_dimemp",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "DS_ASQL_myazuresqldb_dimemp",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "DS_ASQL_myazuresqldb_dimemp",
						"type": "DatasetReference"
					},
					"name": "sink4"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "crossjoin"
				},
				{
					"name": "Join1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Join2"
				},
				{
					"name": "ConditionalSplit2"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "AlterRow2"
				},
				{
					"name": "DerivedColumn2"
				}
			],
			"script": "source(output(\n\t\tEMPNO as integer,\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as integer,\n\t\tHIREDATE as timestamp,\n\t\tSAL as double,\n\t\tCOMM as string,\n\t\tDEPTNO as integer,\n\t\tmodified_Date as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Employees\nsource(output(\n\t\tmax_emp_key as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select max(emp_key) max_emp_key from [dbo].[dimemp]',\n\tformat: 'query') ~> dimempmaxkey\nsource(output(\n\t\tEMP_KEY as integer,\n\t\tEMPNO as decimal(4,0),\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as decimal(4,0),\n\t\tHIREDATE as timestamp,\n\t\tSAL as decimal(7,2),\n\t\tCOMM as decimal(7,2),\n\t\tDEPTNO as decimal(2,0),\n\t\tFromDate as timestamp,\n\t\tToDate as timestamp,\n\t\tisActive as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> dimemp\nDerivedColumn1 select(mapColumn(\n\t\tsrc_EMPNO = EMPNO,\n\t\tsrc_ENAME = ENAME,\n\t\tsrc_JOB = JOB,\n\t\tsrc_MGR = MGR,\n\t\tsrc_HIREDATE = HIREDATE,\n\t\tsrc_SAL = SAL,\n\t\tsrc_COMM = COMM,\n\t\tsrc_DEPTNO = DEPTNO,\n\t\tsrc_FromDate = srcFromDate,\n\t\tsrc_isActive = isActive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, dimempmaxkey join(1==1,\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> crossjoin\ncrossjoin, dimemp join(src_EMPNO == EMPNO,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 split(isNull(EMPNO),\n\tdisjoint: false) ~> ConditionalSplit1@(notmatched, matched)\nEmployees derive(srcFromDate = currentDate(),\n\t\tisActive = 1) ~> DerivedColumn1\nConditionalSplit1@matched, dimemp join(src_JOB == dimemp@JOB\n\t&& src_EMPNO == dimemp@EMPNO,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 split(isNull(dimemp@JOB),\n\tdisjoint: false) ~> ConditionalSplit2@(notmatched, matched)\nConditionalSplit2@matched alterRow(updateIf(1==1)) ~> AlterRow1\nConditionalSplit2@notmatched alterRow(updateIf(ConditionalSplit2@notmatched@EMP_KEY<=max_emp_key)) ~> AlterRow2\nAlterRow2 derive(ToDate = currentTimestamp(),\n\t\tisactive = 0) ~> DerivedColumn2\nConditionalSplit1@notmatched sink(input(\n\t\tEMP_KEY as integer,\n\t\tEMPNO as decimal(4,0),\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as decimal(4,0),\n\t\tHIREDATE as timestamp,\n\t\tSAL as decimal(7,2),\n\t\tCOMM as decimal(7,2),\n\t\tDEPTNO as decimal(2,0),\n\t\tFromDate as timestamp,\n\t\tToDate as timestamp,\n\t\tisActive as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tEMPNO = src_EMPNO,\n\t\tENAME = src_ENAME,\n\t\tJOB = src_JOB,\n\t\tMGR = src_MGR,\n\t\tHIREDATE = src_HIREDATE,\n\t\tSAL = src_SAL,\n\t\tCOMM = src_COMM,\n\t\tDEPTNO = src_DEPTNO,\n\t\tFromDate = src_FromDate,\n\t\tisActive = src_isActive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1\nAlterRow1 sink(input(\n\t\tEMP_KEY as integer,\n\t\tEMPNO as decimal(4,0),\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as decimal(4,0),\n\t\tHIREDATE as timestamp,\n\t\tSAL as decimal(7,2),\n\t\tCOMM as decimal(7,2),\n\t\tDEPTNO as decimal(2,0),\n\t\tFromDate as timestamp,\n\t\tToDate as timestamp,\n\t\tisActive as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['EMPNO'],\n\tformat: 'table',\n\tmapColumn(\n\t\tEMPNO = src_EMPNO,\n\t\tMGR = src_MGR,\n\t\tHIREDATE = src_HIREDATE,\n\t\tSAL = src_SAL\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink2\nConditionalSplit2@notmatched sink(input(\n\t\tEMP_KEY as integer,\n\t\tEMPNO as decimal(4,0),\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as decimal(4,0),\n\t\tHIREDATE as timestamp,\n\t\tSAL as decimal(7,2),\n\t\tCOMM as decimal(7,2),\n\t\tDEPTNO as decimal(2,0),\n\t\tFromDate as timestamp,\n\t\tToDate as timestamp,\n\t\tisActive as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tEMPNO = src_EMPNO,\n\t\tENAME = src_ENAME,\n\t\tJOB = src_JOB,\n\t\tMGR = src_MGR,\n\t\tHIREDATE = src_HIREDATE,\n\t\tSAL = src_SAL,\n\t\tCOMM = src_COMM,\n\t\tDEPTNO = src_DEPTNO,\n\t\tFromDate = src_FromDate,\n\t\tisActive = src_isActive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink3\nDerivedColumn2 sink(input(\n\t\tEMP_KEY as integer,\n\t\tEMPNO as decimal(4,0),\n\t\tENAME as string,\n\t\tJOB as string,\n\t\tMGR as decimal(4,0),\n\t\tHIREDATE as timestamp,\n\t\tSAL as decimal(7,2),\n\t\tCOMM as decimal(7,2),\n\t\tDEPTNO as decimal(2,0),\n\t\tFromDate as timestamp,\n\t\tToDate as timestamp,\n\t\tisActive as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['EMPNO'],\n\tskipKeyWrites:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tEMPNO = src_EMPNO,\n\t\tToDate,\n\t\tisActive = DerivedColumn2@isactive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink4"
		}
	}
}